name: Windows-MSVC-x64-Release

on:
  push:
    branches: [ ci-setup, renderer-2.0 ]
  pull_request:
    branches: [ ci-setup, renderer-2.0 ]
  workflow_dispatch:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: SSH Agent
      uses: webfactory/ssh-agent@v0.5.4
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
    
    - name: Check git submodules
      # Initialize and download (if needed) engine dependencies
      run: git submodule update --init

    - name: Prepare Vulkan SDK
      uses: humbletim/setup-vulkan-sdk@v1.2.0
      with:
        vulkan-query-version: 1.3.236.0
        vulkan-components: Vulkan-Headers, Vulkan-Loader
        vulkan-use-cache: true

    - name: Install conan
      run: pip install conan

    - name: Prepare conan environment
      run: python Scripts/prepare_env.py

    - name: Check conan cache
      id: cache-conan
      uses: actions/cache@v3
      with:
        path: ${{ env.CONAN_USER_HOME }}
        key: ${{ runner.os }}-conan-cache

    - name: Prepare conan packages and Visual Studio solution
      run: python Scripts/generate_solution.py ${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build .build/Win --config ${{env.BUILD_TYPE}} --parallel 2
      
